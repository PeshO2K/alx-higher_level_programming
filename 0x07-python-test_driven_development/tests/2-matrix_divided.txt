The ``2-matrix_divided`` module
============================

Using ``matrix_divided``
---------------------
First import ``matrix_divided `` from The
``2-matrix_divided`` module:
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

	>>> matrix_divided()
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

	>>> matrix_divided(None, None)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided(None, 2)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	
	>>> matrix_divided([[2,3,4], [2, 3, "4"]], 2)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([[2, 3, 4], [2, 3]], 2)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

	>>> matrix_divided([[2, 3, 4], [2, 3, 4]], 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

	>>> matrix_divided([[2, 3, 4], [2, 3, 4]], "0")
	Traceback (most recent call last):
	TypeError: div must be a number

	>>> matrix_divided([[4, 4, 4], [4, 6, 2]], 3)
	[[1.33, 1.33, 1.33], [1.33, 2.0, 0.67]]
